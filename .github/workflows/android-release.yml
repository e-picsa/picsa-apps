# Create android release AAB and upload play store

# Required Secrets
# - ANDROID_KEY_ALIAS
# - ANDROID_KEY_PASSWORD
# - ANDROID_KEY_STORE_PASSWORD
# - ANDROID_SIGNING_KEY_B64
# - GOOGLE_PLAY_SERVICE_ACCOUNT_JSON
# - GOOGLE_SERVICES_JSON

name: Android - Release to Google Play
on:
  release:
    types: [published]
  workflow_dispatch:

env:
  # Ensure supabase config env available to all steps as used in nx build cache computation
  # as well as populating file
  SUPABASE_PROJECT_ID: ${{ vars.SUPABASE_PROJECT_ID }}
  SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}

jobs:
  android_release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: 'yarn'

      - name: Populate supabase config
        run: |
          jq -n \
            --arg apiUrl "https://${SUPABASE_PROJECT_ID}.supabase.co" \
            --arg anonKey "$SUPABASE_ANON_KEY" \
            '{apiUrl: $apiUrl, anonKey: $anonKey}' \
            > libs/environments/src/supabase/supabase.config.json

      - name: Install node modules
        run: yarn install --immutable

      - name: Populate google-services.json
        env:
          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: |
          echo $GOOGLE_SERVICES_JSON > apps/picsa-apps/app-native/android/app/google-services.json

      - name: Build App
        run: yarn nx run picsa-apps-app-native:build

      - name: Verify supabase config in built output
        run: |
          CONFIG_FILE=dist/apps/picsa-apps/app/assets/supabase.config.json
          if [ ! -f "$CONFIG_FILE" ]; then
            echo "❌ Missing $CONFIG_FILE in build output!"
            ls dist/apps/picsa-apps/app/assets
            exit 1
          fi
          echo "✅ Found supabase config in build output"
          cat "$CONFIG_FILE"

      - name: Sync Capacitor
        run: npx cap sync
        working-directory: apps/picsa-apps/app-native

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      # - name: Build Android Debug APK
      #   working-directory: apps/picsa-apps/app-native/android
      #   run: ./gradlew :app:assembleDebug

      - name: Build Android Release Bundle
        working-directory: apps/picsa-apps/app-native/android
        run: ./gradlew :app:bundleRelease

      - name: Sign Android Release
        id: sign_aab
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: apps/picsa-apps/app-native/android/app/build/outputs/bundle/release
          signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY_B64 }}
          alias: ${{ secrets.ANDROID_KEY_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}

      - name: Upload to Google play
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}
          packageName: io.picsa.extension
          releaseFiles: ${{steps.sign_aab.outputs.signedReleaseFile}}
          track: internal
        env:
          GOOGLE_PLAY_SERVICE_ACCOUNT_JSON: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}
